name: Build LXC Containers

on:
  workflow_dispatch:
    inputs:
      publish_all:
        description: '是否发布所有构建的镜像'
        required: false
        type: boolean
        default: true

jobs:
  build-centos-10-stream-amd64:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Go环境
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: 安装LXC依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y lxc lxc-templates bridge-utils curl tar sshpass

    - name: 配置LXC环境
      run: |
        sudo systemctl start lxc
        sudo lxc-checkconfig

    - name: 构建LXC构建器
      run: go build -o lxc-builder

    - name: 构建CentOS 10 Stream amd64容器
      run: |
        ./lxc-builder build centos 10-Stream amd64
        
    - name: 测试SSH连接
      run: |
        sleep 30
        container_name=$(ls /var/lib/lxc/ | grep centos)
        container_ip=$(sudo lxc-info -n $container_name -i -H)
        echo "容器IP: $container_ip"
        sshpass -p "github-actions-123" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 root@$container_ip "echo 'SSH连接成功'"

    - name: 发布容器
      if: ${{ github.event.inputs.publish_all }}
      run: |
        container_name=$(ls /var/lib/lxc/ | grep centos)
        ./lxc-builder publish $container_name
        
    - name: 上传容器制品
      if: ${{ github.event.inputs.publish_all }}
      uses: actions/upload-artifact@v4
      with:
        name: lxc容器-centos-10-stream-amd64
        path: "*.tar.gz"
        retention-days: 7

    - name: 清理资源
      if: always()
      run: |
        sudo lxc-ls --running | xargs -r -I {} sudo lxc-stop -n {}
        sudo lxc-ls | xargs -r -I {} sudo lxc-destroy -n {} -f

  build-centos-10-stream-arm64:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Go环境
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: 安装LXC依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y lxc lxc-templates bridge-utils curl tar sshpass

    - name: 配置LXC环境
      run: |
        sudo systemctl start lxc
        sudo lxc-checkconfig

    - name: 构建LXC构建器
      run: go build -o lxc-builder

    - name: 构建CentOS 10 Stream arm64容器
      run: |
        ./lxc-builder build centos 10-Stream arm64
        
    - name: 测试SSH连接
      run: |
        sleep 30
        container_name=$(ls /var/lib/lxc/ | grep centos)
        container_ip=$(sudo lxc-info -n $container_name -i -H)
        echo "容器IP: $container_ip"
        sshpass -p "github-actions-123" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 root@$container_ip "echo 'SSH连接成功'"

    - name: 发布容器
      if: ${{ github.event.inputs.publish_all }}
      run: |
        container_name=$(ls /var/lib/lxc/ | grep centos)
        ./lxc-builder publish $container_name
        
    - name: 上传容器制品
      if: ${{ github.event.inputs.publish_all }}
      uses: actions/upload-artifact@v4
      with:
        name: lxc容器-centos-10-stream-arm64
        path: "*.tar.gz"
        retention-days: 7

    - name: 清理资源
      if: always()
      run: |
        sudo lxc-ls --running | xargs -r -I {} sudo lxc-stop -n {}
        sudo lxc-ls | xargs -r -I {} sudo lxc-destroy -n {} -f

  build-centos-9-stream-amd64:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Go环境
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: 安装LXC依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y lxc lxc-templates bridge-utils curl tar sshpass

    - name: 配置LXC环境
      run: |
        sudo systemctl start lxc
        sudo lxc-checkconfig

    - name: 构建LXC构建器
      run: go build -o lxc-builder

    - name: 构建CentOS 9 Stream amd64容器
      run: |
        ./lxc-builder build centos 9-Stream amd64
        
    - name: 测试SSH连接
      run: |
        sleep 30
        container_name=$(ls /var/lib/lxc/ | grep centos)
        container_ip=$(sudo lxc-info -n $container_name -i -H)
        echo "容器IP: $container_ip"
        sshpass -p "github-actions-123" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 root@$container_ip "echo 'SSH连接成功'"

    - name: 发布容器
      if: ${{ github.event.inputs.publish_all }}
      run: |
        container_name=$(ls /var/lib/lxc/ | grep centos)
        ./lxc-builder publish $container_name
        
    - name: 上传容器制品
      if: ${{ github.event.inputs.publish_all }}
      uses: actions/upload-artifact@v4
      with:
        name: lxc容器-centos-9-stream-amd64
        path: "*.tar.gz"
        retention-days: 7

    - name: 清理资源
      if: always()
      run: |
        sudo lxc-ls --running | xargs -r -I {} sudo lxc-stop -n {}
        sudo lxc-ls | xargs -r -I {} sudo lxc-destroy -n {} -f

  build-centos-9-stream-arm64:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Go环境
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: 安装LXC依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y lxc lxc-templates bridge-utils curl tar sshpass

    - name: 配置LXC环境
      run: |
        sudo systemctl start lxc
        sudo lxc-checkconfig

    - name: 构建LXC构建器
      run: go build -o lxc-builder

    - name: 构建CentOS 9 Stream arm64容器
      run: |
        ./lxc-builder build centos 9-Stream arm64
        
    - name: 测试SSH连接
      run: |
        sleep 30
        container_name=$(ls /var/lib/lxc/ | grep centos)
        container_ip=$(sudo lxc-info -n $container_name -i -H)
        echo "容器IP: $container_ip"
        sshpass -p "github-actions-123" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 root@$container_ip "echo 'SSH连接成功'"

    - name: 发布容器
      if: ${{ github.event.inputs.publish_all }}
      run: |
        container_name=$(ls /var/lib/lxc/ | grep centos)
        ./lxc-builder publish $container_name
        
    - name: 上传容器制品
      if: ${{ github.event.inputs.publish_all }}
      uses: actions/upload-artifact@v4
      with:
        name: lxc容器-centos-9-stream-arm64
        path: "*.tar.gz"
        retention-days: 7

    - name: 清理资源
      if: always()
      run: |
        sudo lxc-ls --running | xargs -r -I {} sudo lxc-stop -n {}
        sudo lxc-ls | xargs -r -I {} sudo lxc-destroy -n {} -f
